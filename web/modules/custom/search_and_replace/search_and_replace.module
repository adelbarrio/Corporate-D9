<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\search_and_replace\Plugin\Scanner\SarNode;
use Drupal\search_and_replace\SarForm;
use Drupal\search_and_replace\SarEntity;

/**
 * Implements hook_local_tasks_alter().
 */
function search_and_replace_local_tasks_alter(&$local_tasks) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(SarEntity::class)
    ->localTaskAlter($local_tasks);
}

/**
 * Implements hook_form_alter().
 */
function search_and_replace_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /*return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(SarForm::class)
    ->formAlter($form, $form_state, $form_id);*/
}
function search_and_replace_form_scanner_admin_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  //hardcoded disabled entity_types and fields
  $forbidden_entity_types = ['paragraph'];
  $forbidden_fields = ['moderation_state'];
  foreach ($form['enabled_content_types']['#options'] as $k => $v){
    $entity = explode(":",$k);
    if (in_array($entity[0], $forbidden_entity_types)){
      unset($form['enabled_content_types']['#options'][$k]);
    }
  }
  foreach ($form['fields_of_selected_content_type']['#options'] as $k => $v){
    $entity = explode(":",$k);
    if (in_array($entity[0], $forbidden_entity_types) OR in_array($entity[2],$forbidden_fields)){
      unset($form['fields_of_selected_content_type']['#options'][$k]);
    }
  }
}
function search_and_replace_form_scanner_form_alter(&$form, FormStateInterface $form_state, $form_id) {
}

/**
 * Implements hook_filter_info_alter().
 */
/**
 * Implements hook_scanner_info_alter().
 */
function search_and_replace_scanner_info_alter(array &$scanners) {
  $scanners['scanner_node']['class'] = SarNode::class;
}
