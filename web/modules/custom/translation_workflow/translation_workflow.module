<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\translation_workflow\Entity\MultipleTargetLanguageJobItem;
use Drupal\translation_workflow\MultipleTargetLanguageConfigSourcePluginUi;
use Drupal\translation_workflow\MultipleTargetLanguageLocaleSourcePluginUi;
use Drupal\translation_workflow\MutipleTargetLanguageContentEntitySourcePluginUi;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function translation_workflow_form_tmgmt_cart_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $jobFieldDefinitions = \Drupal::service('entity_field.manager')
    ->getFieldDefinitions('job_group', 'default');
  if (isset($jobFieldDefinitions['priority'])) {
    $priorityField = $jobFieldDefinitions['priority'];
    $form['priority'] = [
      '#type' => 'select',
      '#options' => $priorityField->getSetting('allowed_values'),
      '#title' => $priorityField->getLabel(),
      '#weight' => -1,
    ];
  }

  if (isset($form['source_language'])) {
    $form['source_language']['#size'] = 24;
    if (isset($form['source_language']['#options']['nol'])) {
      unset($form['source_language']['#options']['nol']);
    }
  }

  if (isset($form['target_language'])) {
    $form['target_language']['#size'] = 24;
    if (isset($form['target_language']['#options']['nol'])) {
      unset($form['target_language']['#options']['nol']);
    }
  }

  // Select all languages.
  $form['select_all_lng'] = [
    '#type' => 'checkbox',
    '#title' => t('Select all languages'),
  ];
  $form['empty_cart']['#weight'] = 7;
  $form['remove_selected']['#weight'] = 6;
  $form['request_translation']['#weight'] = 4;

  $form['#attached']['library'][] = 'translation_workflow/select_all';
  //array_unshift($form["request_translation"]["#submit"], '_translation_workflow_form_tmgmt_cart_form_submit');
  $form["request_translation"]["#submit"][] = '_translation_workflow_form_tmgmt_cart_form_submit';
}

function _translation_workflow_form_tmgmt_cart_form_submit(&$form, FormStateInterface $form_state) {
  /*$jobItems = JobItem::loadMultiple(array_filter($form_state->getValue('items')));
  $jobGroup = JobGroup::create();
  foreach ($jobItems as $jobItem) {
    $jobGroup->get('items_id')->appendItem(['target_id' => $jobItem->id()]);
  }
  $jobGroup->save();*/
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function translation_workflow_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'tmgmt_job_item') {
    $fields["tjid"]->setSetting('target_type', 'tmgmt_job_multiple_target');
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function translation_workflow_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  if (isset($entity_types['tmgmt_job_item'])) {
    //$entity_types['tmgmt_job_item']->setHandlerClass('access', MultipleTargetLanguageJobItemAccessControlHandler::class);
    //$entity_types['tmgmt_job_item']->setHandlerClass('list_builder', MultipleTargetLanguageJobItemListBuilder::class);
    /*$entity_types['tmgmt_job_item']->setHandlerClass('form', [
      'edit' => MultipleTargetLanguageJobItemForm::class,
    ]);*/
  }
}

/**
 * Implements hook_tmgmt_file_format_plugin_info_alter().
 */
function translation_workflow_tmgmt_file_format_plugin_info_alter(&$file_formats) {
}

/**
 * Implements hook_tmgmt_translator_plugin_info_alter().
 */
function translation_workflow_tmgmt_translator_plugin_info_alter(&$info) {
}

/**
 * Implements hook_tmgmt_source_plugin_info_alter().
 */
function translation_workflow_tmgmt_source_plugin_info_alter(&$info) {
  foreach ($info as $pluginName => &$pluginInfo) {
    $uiClass = $pluginInfo['ui'];
    $class = $pluginInfo['class'];
    switch ($pluginName) {
      case 'content':
        $uiClass = MutipleTargetLanguageContentEntitySourcePluginUi::class;
        //$class = MultipleTargetLanguageContentEntitySource::class;
        break;
      case 'locale':
        $uiClass = MultipleTargetLanguageLocaleSourcePluginUi::class;
        break;
      case 'config':
        $uiClass = MultipleTargetLanguageConfigSourcePluginUi::class;
    }
    $info[$pluginName]['ui'] = $uiClass;
    $info[$pluginName]['class'] = $class;
  }
}

/**
 * Implements hook_entity_type_build().
 */
function translation_workflow_entity_type_build(array &$entity_types) {
  if (isset($entity_types['tmgmt_job_item'])) {
    $entity_types['tmgmt_job_item']->setClass(MultipleTargetLanguageJobItem::class);
  }
}
