<?php

/**
 * @file
 * Update functions for translations workflow.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\File\FileSystemInterface;
use Drupal\tmgmt\Entity\Message;
use Drupal\translation_workflow\Entity\MultipleTargetLanguageJob;

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9001(&$sandbox) {
  // Alter all tmgmt messages to change http by https.
  $messages = Message::loadMultiple();
  foreach ($messages as $message) {
    if ($message->hasField('variables')) {
      $messageValues = $message->get('variables')->getValue();
      foreach ($messageValues as $key => $messageValue) {
        if (isset($messageValue['@link'])) {
          if (parse_url($messageValue['@link'], PHP_URL_SCHEME) == 'http') {
            $messageValues[$key]['@link'] = str_replace('http', 'https', $messageValue['@link']);
          }
        }
      }
      $message->set('variables', $messageValues);
      $message->save();
    }
  }
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9002(&$sandbox) {
  // Add taget_language field to JobItems.
  $updateManager = Drupal::entityDefinitionUpdateManager();
  $updateManager->installFieldStorageDefinition(
    'target_language',
    'tmgmt_job_item',
    'translation_workflow',
    BaseFieldDefinition::create('language')
      ->setLabel(t('Target language code'))
      ->setCardinality(1)
      ->setDescription(t('The target language.'))
  );
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9003(&$sandbox) {
  $translationJobs = MultipleTargetLanguageJob::loadMultiple();
  foreach ($translationJobs as $translationJob) {
    $jobItems = $translationJob->getItems();
    foreach ($jobItems as $jobItem) {
      $jobLanguages = $translationJob->getTargetLanguages();
      $firstLanguage = array_shift($jobLanguages);
      $jobItem->set('target_language', $firstLanguage);
      $jobItem->save();
      foreach ($jobLanguages as $jobLanguage) {
        $newJobItem = $translationJob->addItem($jobItem->getPlugin(), $jobItem->getItemType(), $jobItem->getItemId());
        $newJobItem->set('target_language', $jobLanguage);
        $newJobItem->save();
      }
    }
    $translationJob->save();
  }
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9004(&$sandbox) {
  // Alter all tmgmt messages to regenerate all xml.
  $messages = Message::loadMultiple();
  foreach ($messages as $message) {
    if ($message->hasField('variables')) {
      $messageValues = $message->get('variables')->getValue();
      foreach ($messageValues as $key => $messageValue) {
        if (isset($messageValue['@link'])) {
          $urlPath = parse_url($messageValue['@link'], PHP_URL_PATH);
          if (substr($urlPath, -3) == 'xml') {
            $job = MultipleTargetLanguageJob::load($message->get('tjid')->target_id);
            if ($job) {
              $name = 'translation_job_id_' . $job->id() . '_request';
              $export = \Drupal::service('plugin.manager.tmgmt_file.format')
                ->createInstance($job->getSetting('export_format'), $job->getSetting('format_configuration'));

              $path = 'public://tmgmt_file/' . $name . '.' . $job->getSetting('export_format');
              $dirname = dirname($path);
              if (\Drupal::service('file_system')
                ->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
                $file = file_save_data($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
                \Drupal::service('file.usage')
                  ->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
                $messageValues[$key]['@link'] = file_create_url($path);
              }
            }
          }
        }
      }
      $message->set('variables', $messageValues);
      $message->save();
    }
  }
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9005(&$sandbox) {
  translation_workflow_update_9004($sandbox);
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9006(&$sandbox) {
  // Add taget_language field to JobItems.
  $updateManager = Drupal::entityDefinitionUpdateManager();
  $updateManager->installFieldStorageDefinition(
    'file_uploaded',
    'tmgmt_job_multiple_target',
    'translation_workflow',
    BaseFieldDefinition::create('boolean')
      ->setLabel(t('File uploaded'))
      ->setDescription(t('A boolean indicating if job has a file uploaded or not.'))
      ->setDefaultValue(FALSE)
  );
}

/**
 * Implements hook_update_N().
 */
function translation_workflow_update_9007(&$sandbox) {
  $jobs = MultipleTargetLanguageJob::loadMultiple();
  foreach ($jobs as $job) {
    $messages = $job->getMessages([
      'message' => 'Successfully imported file.',
    ]);
    if (!empty($messages)) {
      $job->set('file_uploaded', TRUE);
    }
    else {
      $job->set('file_uploaded', FALSE);
    }
    $job->save();
  }
}
