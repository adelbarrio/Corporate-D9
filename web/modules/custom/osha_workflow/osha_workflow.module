<?php

use Drupal\osha_workflow\VwEntity;
use Drupal\osha_workflow\VwCmn;
use Drupal\osha_workflow\VwToolBar;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;




/**
 * Implements hook_toolbar_alter().
 */
function osha_workflow_toolbar_alter(&$items) {
   \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(VwToolBar::class)
    ->toolBar($items);
}

/**
 * Implements hook_content_moderation_notification_mail_data_alter().
 */
function osha_workflow_content_moderation_notification_mail_data_alter(EntityInterface $entity, array &$data) {

  // Get the section of the node.
  $nodeSection = $entity->get('field_section')->get(0)->getValue();

  if(!$nodeSection || empty($nodeSection)){
    $data['to'] = [];
    return \Drupal::service('class_resolver')
      ->getInstanceFromDefinition(VwCmn::class)
      ->mailDataAlter($entity, $data);
  }

  $nodeSectionId = $nodeSection['target_id'];
  if(!$nodeSectionId || empty($nodeSectionId)){
    $data['to'] = [];
    return \Drupal::service('class_resolver')
      ->getInstanceFromDefinition(VwCmn::class)
      ->mailDataAlter($entity, $data);
  }
  // Get the section ids with the corresponding section of the node.
  $querySaResult = \Drupal::database()
    ->query('SELECT e.id
        FROM section_association e
        WHERE e.section_id = :section_id', array(
      ':section_id' => $nodeSectionId,
    ));
  $entityId = "";
  foreach ($querySaResult as $item) {
    $entityId= $item->id;
  }

  // Get the user ids from the section_association__user_id with the corresponding section id.
  $queryUserSectionResult = \Drupal::database()
    ->query('SELECT sa.user_id_target_id
        FROM section_association__user_id sa
        WHERE sa.entity_id = :entity_id', array(
      ":entity_id" => $entityId,
    ));
  $sectionUserTargetIds = [];
  foreach ($queryUserSectionResult as $item) {
    array_push($sectionUserTargetIds,$item->user_id_target_id);
  }

  // Get the users from mail from data['to'].
  $data_ids =[];
  foreach ($data['to'] as $receivedMail) {
    if(user_load_by_mail($receivedMail) instanceof \Drupal\ds\Plugin\DsField\User\User){
      array_push($data_ids);
    }
  }

  // Compare users from data['to']  with  users that belong to the section of the node.
  $sectionBelongingUsers = array_diff($sectionUserTargetIds,$data_ids);
  $allowedRoles = ['project_manager'];

  // Set data['to'] to the section Belonging users
  unset($data['to']);
  $data['to'] = [];
  foreach ($sectionBelongingUsers as $item) {
    $theUser = \Drupal::entityTypeManager()->getStorage('user')->load($item);
    if($theUser->isActive()){
      if(count(array_intersect(($theUser->getRoles()), $allowedRoles)) > 0){
        array_push($data['to'], $theUser->mail->value);
      }
    }
  }


}

/**
 * Implements hook_local_tasks_alter().
 */
function osha_workflow_local_tasks_alter(&$local_tasks) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(VwEntity::class)
    ->localTastAlter($local_tasks);
}

/**
 * Implements hook_mail().
 */
function osha_workflow_mail($key, &$message, $params) {
  switch ($key) {
    case 'approvers':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function osha_workflow_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(VwEntity::class)
    ->formAlter($form, $form_state, $form_id);
}

/**
 * Implements hook_entity_view_alter().
 */
function osha_workflow_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(VwEntity::class)
    ->viewAlter($build, $entity, $display);
}

