<?php

use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_query_alter().
 */
function napo_film_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {

  if ($view->id() == "recommended_films") {
    $current_path = substr(\Drupal::service('path.current')->getPath(), 1);
    $mainVideoId = explode('/', $current_path)[1] + 0;
    $query->addWhere(0, 'field_main_tag_taxonomy_term_field_data.nid', $mainVideoId, '!=');
  }

  if ($view->id() == "napo_s_film_episodes") {
    $currentPath = \Drupal::service('path.current')->getPath();
    $matches = [];
    // Extract node path from view route.
    if(preg_match('#.*(/napos-films/[\w,\-]*)/view-scenes#', $currentPath, $matches)) {
      if (isset($matches[1])) {
        // Search node by alias and extract nid.
        $nodePath = \Drupal::service('path_alias.manager')->getPathByAlias($matches[1]);
        if(preg_match('/node\/(\d+)/', $nodePath, $matches)) {
          // Iterate over where clause to find exact expression to modify.
          foreach ($query->where as $keyWhere => $whereClause) {
            foreach ($whereClause['conditions'] as $keyCondition => $condition) {
              if(strpos($condition['field'], 'node__field_napo_film.field_napo_film_target_id') !== false){
                // Set correct value con expression and view parameters for render.
                $query->where[$keyWhere]['conditions'][$keyCondition]['value'][':node__field_napo_film_field_napo_film_target_id'] = $matches[1];
                $view->setArguments([$matches[1]]);
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function napo_film_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {

  if ($route_name == "entity.node.canonical" || $route_name == "entity.node.edit_form") {
    $nid = \Drupal::routeMatch()->getParameter('node');
    if ($nid->id() != 253) {
      unset($data['tabs'][0]['views_view:view.faqs.page']);
    }
  }

}
